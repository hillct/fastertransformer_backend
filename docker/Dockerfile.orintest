# FROM nvcr.io/nvidia/l4t-ml:r35.1.0-py3
# FROM nvcr.io/nvidia/l4t-cuda:11.4.19-runtime
FROM nvcr.io/nvidia/l4t-base:r35.2.1

ARG DEBIAN_FRONTEND=noninteractive
ARG TRITON_VERSION=22.12

RUN wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/sbsa/cuda-keyring_1.0-1_all.deb && dpkg -i cuda-keyring_1.0-1_all.deb 
# Fix from https://github.com/NVIDIA/nvidia-docker/issues/1632#issuecomment-1125739652
RUN apt-key del 7fa2af80 && apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/arm64/3bf863cc.pub && \
    apt-get update && apt-get upgrade -y && apt-get install -y --no-install-recommends software-properties-common build-essential \
	autoconf automake cmake libb64-dev libre2-dev libssl-dev libtool libboost-dev libcurl4-openssl-dev rapidjson-dev zlib1g-dev mpi-default-dev patchelf \
	git iproute2 nano && \
    apt-get install -y cuda-toolkit-11-4 cuda-tools-11-4 cuda-cupti-11-4 libopenblas-dev tensorrt cargo python3-dev python3-pip && \
    apt install libnccl2=2.16.5-1+cuda11.8 libnccl-dev=2.16.5-1+cuda11.8 && \
    pip3 install --upgrade pip && apt remove -y python2.7 && apt autoremove -y &&  rm -rf /var/lib/apt/lists/*

RUN pip3 install --pre --extra-index-url https://developer.download.nvidia.com/compute/redist/jp/v51 tensorflow==2.11.0+nv23.01
RUN pip3 install --no-cache https://developer.download.nvidia.com/compute/redist/jp/v51/pytorch/torch-1.14.0a0+44dac51c.nv23.01-cp38-cp38-linux_aarch64.whl
RUN  pip3 install --extra-index-url https://pypi.ngc.nvidia.com regex fire ipywidgets tritonclient[all] && pip3 install jupyterlab cmake==3.24.3

RUN pip3 install transformers huggingface_hub tokenizers SentencePiece sacrebleu datasets tqdm omegaconf rouge_score

# backend build
ADD . /workspace/build/fastertransformer_backend
RUN mkdir -p /workspace/build/fastertransformer_backend/build

WORKDIR /workspace/build/fastertransformer_backend/build
ARG FORCE_BACKEND_REBUILD=0
RUN cmake \
      -D CMAKE_EXPORT_COMPILE_COMMANDS=1 \
      -D CMAKE_BUILD_TYPE=Release \
      -D ENABLE_FP8=OFF \
      -D CMAKE_INSTALL_PREFIX=/opt/tritonserver \
      -D TRITON_COMMON_REPO_TAG="r${TRITON_VERSION}" \
      -D TRITON_CORE_REPO_TAG="r${TRITON_VERSION}" \
      -D TRITON_BACKEND_REPO_TAG="r${TRITON_VERSION}" ..

#RUN cd _deps/repo-ft-src/ && \
#    git log | head -n 3 2>&1 | tee /workspace/build/fastertransformer_backend/FT_version.txt && \
#    cd /workspace/build/fastertransformer_backend/build && \
#    make -j"$(grep -c ^processor /proc/cpuinfo)" install && \
#    rm /workspace/build/fastertransformer_backend/build/bin/*_example -rf && \
#    rm /workspace/build/fastertransformer_backend/build/lib/lib*Backend.so -rf

ENV NCCL_LAUNCH_MODE=GROUP
ENV WORKSPACE /workspace
WORKDIR /workspace

#RUN sed -i 's/#X11UseLocalhost yes/X11UseLocalhost no/g' /etc/ssh/sshd_config && \
#    mkdir /var/run/sshd -p
EXPOSE 8888
